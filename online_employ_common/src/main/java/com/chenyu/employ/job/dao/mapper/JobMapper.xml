<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chenyu.employ.job.dao.JobMapper" >
  <resultMap id="resultMap" type="com.chenyu.employ.job.model.Job" >
    <id column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="job_field" property="jobField" jdbcType="INTEGER" />
    <result column="job_name" property="jobName" jdbcType="VARCHAR" />
    <result column="experience" property="experience" jdbcType="INTEGER" />
    <result column="job_province" property="jobProvince" jdbcType="VARCHAR" />
    <result column="job_city" property="jobCity" jdbcType="VARCHAR" />
    <result column="job_dist" property="jobDist" jdbcType="VARCHAR" />
    <result column="job_address" property="jobAddress" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="salary" property="salary" jdbcType="INTEGER" />
    <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="job_update_time" property="jobUpdateTime" jdbcType="TIMESTAMP"/>
    <result column="request" property="request" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR"/>
    <result column="job_status" property="jobStatus" jdbcType="INTEGER" />
    <association property="companyDetail" javaType="com.chenyu.employ.company.model.CompanyDetail">
    	<id column="cd_id" property="cdId" jdbcType="INTEGER" />
		<result column="company_type" property="companyType" jdbcType="VARCHAR" />
	    <result column="company_introduce" property="companyIntroduce"
			jdbcType="VARCHAR" />
		<result column="establish_date" property="establishDate"
			javaType="java.util.Date" jdbcType="DATE" />
		<result column="staff_number" property="staffNumber" jdbcType="INTEGER" />
		<result column="contact_tel" property="contactTel" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="province" property="province" jdbcType="VARCHAR" />
		<result column="city" property="city" jdbcType="VARCHAR" />
		<result column="dist" property="dist" jdbcType="VARCHAR" />
		<result column="zipcode" property="zipcode" jdbcType="CHAR" />
		<result column="field" property="field" jdbcType="INTEGER" />
		<result column="offsite_url" property="offsiteUrl" jdbcType="VARCHAR" />
		<result column="logo" property="logo" jdbcType="VARCHAR" />
		<result column="company_email" property="companyEmail"
			jdbcType="VARCHAR" />
		<result column="weight" property="weight" jdbcType="INTEGER" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	 	<association property="company"
			javaType="com.chenyu.employ.company.model.Company">
			<id property="cid" column="cid" jdbcType="VARCHAR" />
			<result property="companyName" column="companyName" jdbcType="VARCHAR" />
			<result column="loginName" property="loginname" jdbcType="VARCHAR" />
			<result column="password" property="password" jdbcType="VARCHAR" />
			<result column="status" property="status" jdbcType="INTEGER" />
			<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
			<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		</association>
    </association>
  </resultMap>
  <select id="getList" resultMap="resultMap">
  	select 
  	*
  	 from job j inner join(select
		cd_id,c.companyName as companyName,
		c.cid,
		c.status,
		c.create_time,
		company_type,company_introduce, establish_date,staff_number,
		contact_tel, offsite_url,
		logo,address,province,city,dist,zipcode,field,company_email,weight,cd.update_time
		from company_detail cd
		inner join company c on cd.company_id=c.cid) c_d on j.companydetail_id=c_d.cd_id
  </select>
  
  <select id="getJobList" resultMap="resultMap" parameterType="com.chenyu.employ.job.dto.JobDto">
  	select 
  	*
  	 from job j inner join(select
		cd_id,c.companyName as companyName,
		c.cid,
		c.status,
		c.create_time,
		company_type,company_introduce, establish_date,staff_number,
		contact_tel, offsite_url,
		logo,address,province,city,dist,zipcode,field,company_email,weight,cd.update_time
		from company_detail cd
		inner join company c on cd.company_id=c.cid) c_d on j.companydetail_id=c_d.cd_id
	    <if test="companyDetail!=null and companyDetail.company.companyName!=null and companyDetail.company.companyName!=''">
	    	and j.companydetail_id=#{companyDetail.company.cid,jdbcType=INTEGER}
	    </if>
	    order by publish_time desc,weight asc
	    <if test="offset!=null and pageSize!=null and pageSize!=''">
			limit #{offset,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    	</if>
  </select>  
  
  <select id="getJobCount" resultType="INTEGER" parameterType="com.chenyu.employ.job.model.Job">
  	select 
  	count(*)
  	 from job j inner join(select
		cd_id,c.companyName as companyName,
		c.cid,
		c.status,
		c.create_time,
		company_type,company_introduce, establish_date,staff_number,
		contact_tel, offsite_url,
		logo,address,province,city,dist,zipcode,field,company_email,weight,cd.update_time
		from company_detail cd
		inner join company c on cd.company_id=c.cid) c_d on j.companydetail_id=c_d.cd_id
	    <if test="companyDetail.company.companyName!=null and companyDetail.company.companyName!=''">
	    	and j.companydetail_id=#{companyDetail.company.cid,jdbcType=INTEGER}
	    </if>
  </select>  
  
  <select id="getJobByJobId" resultMap="resultMap" parameterType="INTEGER">
  	select *
  	from job j inner join(select
		cd_id,c.companyName as companyName,
		c.cid,
		c.status,
		c.create_time,
		company_type,company_introduce, establish_date,staff_number,
		contact_tel, offsite_url,
		logo,address,province,city,dist,zipcode,field,company_email,weight,cd.update_time
		from company_detail cd
		inner join company c on cd.company_id=c.cid) c_d on j.companydetail_id=c_d.cd_id
	    and j.job_id=#{jobId,jdbcType=INTEGER}
  </select>
  
  <update id="changeJobStatus" parameterType="com.chenyu.employ.job.model.Job">
  	update job
  	set job_status=#{jobStatus,jdbcType=INTEGER} where
  	job_id=#{jobId,jdbcType=INTEGER}
  </update>
  
  <delete id="deleteJob" parameterType="Integer">
  	delete from job where job_id=#{jobId,jdbcType=INTEGER}
  </delete>
  
  <update id="updateJob" parameterType="com.chenyu.employ.job.model.Job">
  update job
  <set>
  	<if test="jobField != null" >
        job_field = #{jobField,jdbcType=INTEGER},
      </if>
      <if test="jobName != null" >
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="experience != null" >
        experience = #{experience,jdbcType=TINYINT},
      </if>
      <if test="jobProvince != null" >
        job_province = #{jobProvince,jdbcType=VARCHAR},
      </if>
      <if test="jobCity != null" >
        job_city = #{jobCity,jdbcType=VARCHAR},
      </if>
      <if test="jobDist != null" >
        job_dist = #{jobDist,jdbcType=VARCHAR},
      </if>
      <if test="jobAddress != null" >
        job_address = #{jobAddress,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=INTEGER},
      </if>
      <if test="request != null" >
        request = #{request,jdbcType=VARCHAR},
      </if>
      <if test="description!=null">
      	description=#{description,jdbcType=VARCHAR},
      </if>
      job_update_time=now()
   </set>
   where job_id=#{jobId,jdbcType=INTEGER}
  </update>
  
  <insert id="saveJob" parameterType="com.chenyu.employ.job.model.Job">
  	insert into job(companydetail_id,job_field,job_name,experience,job_province,job_city,job_dist,job_address,number
  	,salary,publish_time,job_update_time,request,description) values(#{companyDetail.cdId,jdbcType=INTEGER},#{jobField,jdbcType=INTEGER}, 
      #{jobName,jdbcType=VARCHAR}, #{experience,jdbcType=INTEGER},
      #{jobProvince,jdbcType=VARCHAR},#{jobCity,jdbcType=VARCHAR},
      #{jobDist,jdbcType=VARCHAR},#{jobAddress,jdbcType=VARCHAR},
      #{number,jdbcType=INTEGER},#{salary,jdbcType=INTEGER},now(),now(),
      #{request,jdbcType=VARCHAR},#{description,jdbcType=VARCHAR})
  </insert>
  
  <update id="pulishAgain" parameterType="java.lang.Integer">
  	update job set publish_time=now()
  	where job_id=#{jodId,jdbcType=INTEGER}
  </update>
  
</mapper>